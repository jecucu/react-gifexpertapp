{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExportApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","console","log","type","value","onChange","target","GifGridItem","url","title","className","src","alt","getGifs","category","a","encodeURI","fetch","peticion","json","data","gifs","map","gif","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","img","setTimeout","useFetchGifs","GifExportApp","rootDiv","document","getElementById","ReactDOM","render"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAQ,IAE1BR,GAAe,SAACS,GAAiB,MAAM,CAAEP,GAAR,mBAAuBO,OACxDN,EAAc,KAEtBO,QAAQC,IAAI,cAIR,SACI,uBACIC,KAAK,OACLC,MAAOX,EACPY,SAlBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,a,QCJdG,EAAc,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,MAEhC,OACI,mCACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMH,EAAMI,IAAI,UACrB,4BAAKH,U,uBCPRI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACTP,EADS,iDACwCQ,UAAUF,GADlD,+DAEQG,MAAMT,GAFd,cAETU,EAFS,gBAGQA,EAASC,OAHjB,uBAGPC,EAHO,EAGPA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXD,IAAG,UAAEe,EAAIE,cAAN,aAAE,EAAYC,iBAAiBlB,QAT3B,kBAaRa,GAbQ,4CAAH,sDCKPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEVtB,mBAAS,CACjC4B,KAAM,GACNQ,SAAS,IAJyB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAqBtC,OAbAC,qBAAW,WAEPlB,EAAQC,GACHkB,MAAM,SAAAC,GACHC,YAAY,WACRJ,EAAS,CACLV,KAAMa,EACNL,SAAS,MACP,UAGnB,CAACd,IAEGe,EDjB0BM,CAAarB,GAAjCW,EAFsB,EAE3BL,KAAaQ,EAFc,EAEdA,QAGrB,OAFA3B,QAAQC,IAAI0B,GAGR,qCACI,oBAAIlB,UAAU,kBAAd,SAAkCI,IAChCc,GAAW,mBAAGlB,UAAU,oBAAb,qBACb,qBAAKA,UAAU,YAAf,SAEQe,EAAOH,KAAK,SAAAW,GAAS,OAAO,cAAC,EAAD,eAA+BA,GAAbA,EAAIT,aEbzDY,EAAe,WAAM,MAGE5C,mBAAS,CAAC,kBAHZ,mBAG3BQ,EAH2B,KAGfT,EAHe,KAWlC,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAGIS,EAAWsB,KAAK,SAAAR,GAAc,OAAO,cAAC,EAAD,CAA0BA,SAAWA,EAArC,eAAeA,YClBtDuB,EAAUC,SAASC,eAAe,QAExCC,IAASC,OAAQ,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.ace6b54d.chunk.js","sourcesContent":["import React,  { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\nconst [inputValue, setInputValue] = useState('');\r\nconst handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n}\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length >2) \r\n    {\r\n        setCategories( (categories) => { return [inputValue, ...categories] } );\r\n        setInputValue('');\r\n    }\r\nconsole.log('Submitttt')\r\n}\r\n\r\nreturn (\r\n    <form onSubmit={handleSubmit}>\r\n        <input \r\n            type=\"text\" \r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n        ></input>\r\n    </form>\r\n\r\n)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ( { url, title } ) => {\r\n\r\n    return (\r\n        <>\r\n            <div className='card animate__animated animate__bounce'>\r\n                <img src={ url } alt='title'></img>            \r\n                <p>{ title }</p>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=9tZxjWTkXY1SSjiRsR90F2KFIzroTdXR`\r\n        const peticion = await fetch(url);\r\n        const { data } = await peticion.json();\r\n        \r\n        const gifs = data.map( gif => {\r\n            return {\r\n                id: gif.id,\r\n                title: gif.title,\r\n                url: gif.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n\r\n    }\r\n","import React, { useState, useEffect } from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);    \r\n    console.log(loading);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__fadeIn'>{ category }</h3>\r\n            { loading && <p className=\"animate__rotateIn\">Loading</p> }\r\n            <div className='card-grid'>            \r\n                {\r\n                    images.map( img => { return <GifGridItem key={img.id} { ...img }></GifGridItem> } )\r\n                }\r\n            </div>        \r\n        </>\r\n    )\r\n\r\n}","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n \r\n    const [ state, setState ] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n    // const [ images, setImages ] = useState([]);\r\n    useEffect( () => {\r\n        \r\n        getGifs(category)\r\n            .then( img=> {\r\n                setTimeout( () => {\r\n                    setState({\r\n                        data: img,\r\n                        loading: false\r\n                    }) }, 3000 )\r\n            }\r\n        )\r\n    }, [category] )\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExportApp = () => {\r\n\r\n// const {categories, setCategories} = useState(['One Punch Man','Samurai X','Dragon ball']);\r\nconst [categories, setCategories] = useState(['One Punch Man']);\r\n// setCategories('One Punch Man');\r\n// 'One Punch Man','Samurai X','Dragon ball'\r\n// console.log(categories);\r\n// const handleAdd = (e) => {\r\n//     setCategories( (categories) => { return [...categories, 'pepito'] } );\r\n// };\r\n\r\nreturn (\r\n    <>\r\n    <h2>GifExpertApp</h2>\r\n    <AddCategory setCategories={setCategories}></AddCategory>\r\n    <hr/>\r\n    <ol>\r\n        { \r\n        //  categories.map( category => { return <li key={ category }> { category } </li> } ) \r\n        categories.map( category => { return <GifGrid key={ category } category={ category }>  </GifGrid> } ) \r\n\r\n        }\r\n    </ol>\r\n    </>\r\n);\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExportApp } from './GifExportApp';\n\nconst rootDiv = document.getElementById('root');\n\nReactDOM.render( <GifExportApp />, rootDiv );\n\n"],"sourceRoot":""}